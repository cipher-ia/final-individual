{"mappings":"AAAA,EAAE;IACE,MAAM,UAAU;IAChB,IAAI,UAAU,EAAE;IAEhB,SAAS;QACL,EAAE,GAAG,CAAC,SAAS,SAAU,SAAS;YAC9B,UAAU,OAAO,CAAC,CAAA;gBACd,EAAE,yBAAyB,MAAM,CAC7B,CAAC,eAAe,EAAE,EAAE,EAAE,CAAC,eAAe,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,WAAI,EAAE,EAAE,MAAM,CAAC,SAAS,EAAE,EAAE,QAAQ,CAAC,UAAU,CAAC;YAEtH;QACJ,GAAG,IAAI,CAAC;YACJ,eAAe,8BAA8B;QACjD;IACJ;IAEA,SAAS,eAAe,OAAO,EAAE,IAAI;QACjC,EAAE,YACG,WAAW,CAAC,mDACZ,QAAQ,CAAC,CAAC,YAAY,EAAE,MAAM,EAC9B,IAAI,CAAC;IACd;IAEA,oBAAoB;IACpB,EAAE,mBAAmB,EAAE,CAAC,SAAS;QAC7B,MAAM,aAAa,EAAE,yBAAyB,GAAG;QACjD,MAAM,iBAAiB,EAAE,yCAAyC,IAAI,CAAC;QACvE,MAAM,WAAW,SAAS,EAAE,qBAAqB,GAAG;QAEpD,IAAI,CAAC,cAAc,YAAY,GAAG;YAC9B,eAAe,gDAA6C;YAC5D;QACJ;QAEA,uCAAuC;QACvC,MAAM,YAAY,QAAQ,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,IAAI;QAC5C,IAAI,WACA,UAAU,QAAQ,IAAI;aAEtB,QAAQ,IAAI,CAAC;YAAE,IAAI;YAAY,QAAQ;YAAgB;QAAS;QAGpE;QACA,eAAe,mCAAgC;IACnD;IAEA,+BAA+B;IAC/B,SAAS;QACL,MAAM,aAAa,EAAE,qBAAqB,KAAK;QAC/C,QAAQ,OAAO,CAAC,CAAA;YACZ,WAAW,MAAM,CAAC,CAAC;+CACgB,EAAE,SAAS,EAAE,CAAC;;;mDAGV,EAAE,SAAS,MAAM,CAAC;2DACV,EAAE,SAAS,QAAQ,CAAC;;;;;YAKnE,CAAC;QACL;IACJ;IAEA,8BAA8B;IAC9B,EAAE,UAAU,EAAE,CAAC,SAAS,mBAAmB;QACvC,MAAM,aAAa,EAAE,IAAI,EAAE,OAAO,CAAC,aAAa,IAAI,CAAC;QACrD,UAAU,QAAQ,MAAM,CAAC,CAAA,IAAK,EAAE,EAAE,IAAI;QACtC;QACA,eAAe,mCAAmC;IACtD;IAEA,kBAAkB;IAClB,EAAE,mBAAmB,EAAE,CAAC,SAAS;QAC7B,IAAI,QAAQ,MAAM,KAAK,GAAG;YACtB,eAAe,gCAA0B;YACzC;QACJ;QAEA,IAAI,SAAS,EAAE;QACf,IAAI,SAAS,EAAE;QAEf,QAAQ,OAAO,CAAC,CAAA;YACZ,EAAE,IAAI,CAAC,GAAG,QAAQ,CAAC,EAAE,SAAS,EAAE,CAAC,OAAO,CAAC,EAAE;gBACvC,OAAO,IAAI,CAAC,SAAS,MAAM;YAC/B,GAAG,IAAI,CAAC;gBACJ,OAAO,IAAI,CAAC,SAAS,MAAM;YAC/B,GAAG,MAAM,CAAC;gBACN,IAAI,OAAO,MAAM,IAAI,OAAO,MAAM,EAC9B,eAAe,CAAC;;kCAEF,EAAE,OAAO,IAAI,CAAC,SAAS,UAAU;kCACjC,EAAE,OAAO,IAAI,CAAC,SAAS,UAAU;oBAC/C,CAAC,EAAE;YAEX;QACJ;QAEA,UAAU,EAAE;QACZ;IACJ;IAEA,6BAA6B;IAC7B;AACJ","sources":["src/javascript/index.js"],"sourcesContent":["$(function () {\n    const baseUrl = \"http://localhost:8080/productos\";\n    let carrito = [];\n\n    function cargarProductos() {\n        $.get(baseUrl, function (productos) {\n            productos.forEach(p => {\n                $(\"#productoSeleccionado\").append(\n                    `<option value=\"${p.id}\" data-nombre=\"${p.nombre}\">${p.nombre} - €${p.precio} (Stock: ${p.cantidad})</option>`\n                );\n            });\n        }).fail(() => {\n            mostrarMensaje(\"Error al cargar productos.\", \"danger\");\n        });\n    }\n\n    function mostrarMensaje(mensaje, tipo) {\n        $(\"#mensaje\")\n            .removeClass(\"d-none alert-success alert-danger alert-warning\")\n            .addClass(`alert alert-${tipo}`)\n            .html(mensaje);\n    }\n\n    // Añadir al carrito\n    $(\"#agregarCarrito\").on(\"click\", function () {\n        const idProducto = $(\"#productoSeleccionado\").val();\n        const nombreProducto = $(\"#productoSeleccionado option:selected\").data(\"nombre\");\n        const cantidad = parseInt($(\"#cantidadProducto\").val());\n\n        if (!idProducto || cantidad <= 0) {\n            mostrarMensaje(\"Seleccione un producto y cantidad válida.\", \"warning\");\n            return;\n        }\n\n        // Verificar si ya existe en el carrito\n        const existente = carrito.find(p => p.id == idProducto);\n        if (existente) {\n            existente.cantidad += cantidad;\n        } else {\n            carrito.push({ id: idProducto, nombre: nombreProducto, cantidad });\n        }\n\n        actualizarCarrito();\n        mostrarMensaje(\"Producto añadido al carrito.\", \"success\");\n    });\n\n    // Actualizar vista del carrito\n    function actualizarCarrito() {\n        const contenedor = $(\"#carritoProductos\").empty();\n        carrito.forEach(producto => {\n            contenedor.append(`\n                <div class=\"col-md-4\" data-id=\"${producto.id}\">\n                    <div class=\"card\">\n                        <div class=\"card-body\">\n                            <h5 class=\"card-title\">${producto.nombre}</h5>\n                            <p class=\"card-text\">Cantidad: ${producto.cantidad}</p>\n                            <button class=\"btn btn-danger btn-sm quitarProducto\">Quitar</button>\n                        </div>\n                    </div>\n                </div>\n            `);\n        });\n    }\n\n    // Quitar producto del carrito\n    $(document).on(\"click\", \".quitarProducto\", function () {\n        const idProducto = $(this).closest(\".col-md-4\").data(\"id\");\n        carrito = carrito.filter(p => p.id != idProducto);\n        actualizarCarrito();\n        mostrarMensaje(\"Producto eliminado del carrito.\", \"warning\");\n    });\n\n    // Realizar compra\n    $(\"#realizarCompra\").on(\"click\", function () {\n        if (carrito.length === 0) {\n            mostrarMensaje(\"El carrito está vacío.\", \"warning\");\n            return;\n        }\n\n        let exitos = [];\n        let fallos = [];\n\n        carrito.forEach(producto => {\n            $.post(`${baseUrl}/${producto.id}/compra`, function () {\n                exitos.push(producto.nombre);\n            }).fail(() => {\n                fallos.push(producto.nombre);\n            }).always(() => {\n                if (exitos.length || fallos.length) {\n                    mostrarMensaje(`\n                        <strong>Compra realizada:</strong><br>\n                        Exitosos: ${exitos.join(\", \") || \"Ninguno\"}<br>\n                        Fallidos: ${fallos.join(\", \") || \"Ninguno\"}\n                    `, \"info\");\n                }\n            });\n        });\n\n        carrito = [];\n        actualizarCarrito();\n    });\n\n    // Cargar productos al inicio\n    cargarProductos();\n});\n"],"names":[],"version":3,"file":"index.005eec76.js.map","sourceRoot":"/__parcel_source_root/"}